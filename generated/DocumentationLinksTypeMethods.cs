/******************************************************************************
**
** <auto-generated>
**     This code was generated by a tool: UaModeler
**     Runtime Version: 1.6.8, using .NET Server 3.2.0 template (version 0)
**
**     This is a template file that was generated for your convenience.
**     This file will not be overwritten when generating code again.
**     ADD YOUR IMPLEMTATION HERE!
**
**     Generated by gresser <enrico.gresser@brand.de>
** </auto-generated>
**
** Copyright (c) 2006-2023 Unified Automation GmbH All rights reserved.
**
** Software License Agreement ("SLA") Version 2.8
**
** Unless explicitly acquired and licensed from Licensor under another
** license, the contents of this file are subject to the Software License
** Agreement ("SLA") Version 2.8, or subsequent versions
** as allowed by the SLA, and You may not copy or use this file in either
** source code or executable form, except in compliance with the terms and
** conditions of the SLA.
**
** All software distributed under the SLA is provided strictly on an
** "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
** AND LICENSOR HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT
** LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
** PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the SLA for specific
** language governing rights and limitations under the SLA.
**
** Project: .NET OPC UA SDK information model for namespace http://opcfoundation.org/UA/AMB/
**
** Description: OPC Unified Architecture Software Development Kit.
**
** The complete license agreement can be found here:
** http://unifiedautomation.com/License/SLA/2.8/
**
** Created: 25.03.2023
**
******************************************************************************/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Xml;
using UnifiedAutomation.UaBase;
using UnifiedAutomation.UaServer;

namespace UnifiedAutomation.UaBase
{
    public partial class DocumentationLinksModel : BaseObjectModel, IDocumentationLinksMethods
    {
        /// <summary>
        /// https://reference.opcfoundation.org/AMB/v100/docs/10.5.3
        /// </summary>
        /// <param name="context"></param>
        /// <param name="model"></param>
        /// <param name="LinkToExternalSource">Link to an external source. The server might or might not check if a correct URI is provided, or if the URI is available/reachable.</param>
        /// <param name="BrowseName">The BrowseName of the new created Node. Method fails if a Variable with the same BrowseName already exists.</param>
        /// <param name="DisplayName">The DisplayName of the new created Node. If the server supports multiple locales, and the Client wants to provide more than one locale, the Write operation on the Variable shall be used.</param>
        /// <param name="Description">The Description of the new created Node. If the server supports multiple locales, and the Client wants to provide more than one locale, the Write operation on the Variable shall be used.</param>
        /// <param name="LinkVariable">out: The NodeId of the newly created Variable.</param>
        /// <returns></returns>
        public StatusCode AddLink(
            RequestContext context,
            DocumentationLinksModel model,
            string LinkToExternalSource,
            QualifiedName BrowseName,
            LocalizedText DisplayName,
            LocalizedText Description,
            out NodeId LinkVariable
            )
        {
            LinkVariable = null;
            return StatusCodes.BadNotImplemented;
        }

        /// <summary>
        /// https://reference.opcfoundation.org/AMB/v100/docs/10.5.4
        /// </summary>
        /// <param name="context"></param>
        /// <param name="model"></param>
        /// <param name="VariableToBeDeleted">NodeId of the Variable containing a link, that should be deleted. Variable shall be referenced from the Object with a HasComponent Reference where the Method is called on.</param>
        /// <returns></returns>
        public StatusCode RemoveLink(
            RequestContext context,
            DocumentationLinksModel model,
            NodeId VariableToBeDeleted
            )
        {
            return StatusCodes.BadNotImplemented;
        }

    }
}

